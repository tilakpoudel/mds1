remoteServerAddr = "localhost",
port = 4444L,
browserName = "chrome"  # even though it's Chromium, specify "chrome"
)
# Open a connection
remDr$open()
url <- "https://aqicn.org/city/kathmandu/"
# Navigate to a AQI Website
remDr$navigate(url)
remDr <- remoteDriver(
remoteServerAddr = "localhost",
port = 4444L,
browserName = "chrome"  # even though it's Chromium, specify "chrome"
)
# Open a connection
remDr$open()
url <- "https://aqicn.org/city/kathmandu/"
# Navigate to a AQI Website
remDr$navigate(url)
aqi_html <- read_html(remDr$getPageSource() %>% unlist())
# start the Selenium server
remDr <- remoteDriver(
remoteServerAddr = "localhost",
port = 4444L,
browserName = "chrome"  # even though it's Chromium, specify "chrome"
)
# Open a connection
remDr$open()
url <- "https://aqicn.org/city/kathmandu/"
# Navigate to a AQI Website
remDr$navigate(url)
aqi_html <- read_html(remDr$getPageSource() %>% unlist())
# start the Selenium server
remDr <- remoteDriver(
remoteServerAddr = "localhost",
port = 4444L,
browserName = "chrome"  # even though it's Chromium, specify "chrome"
)
# Open a connection
remDr$open()
url <- "https://aqicn.org/city/kathmandu/"
# Navigate to a AQI Website
remDr$navigate(url)
remDr$screenshot(display = TRUE)
remDr <- remoteDriver(
remoteServerAddr = "localhost",
port = 4444L,
browserName = "chrome"  # even though it's Chromium, specify "chrome"
)
# Open a connection
remDr$open()
url <- "https://aqicn.org/city/kathmandu/"
# Navigate again and force wait
remDr$navigate(url)
# Explicit wait for the table element (15 seconds max)
webElem <- tryCatch({
remDr$findElement(using = "css selector", ".forecast-body-table")
}, error = function(e) NULL)
# Check if the table appears
if (is.null(webElem)) stop("AQI table still didn't load!")
suppressWarnings({
library(RSelenium)
library(rvest)
library(jsonlite)
})
# start the Selenium server
remDr <- remoteDriver(
remoteServerAddr = "localhost",
port = 4444L,
browserName = "chrome"  # even though it's Chromium, specify "chrome"
)
# Open a connection
remDr$open()
url <- "https://aqicn.org/city/kathmandu/"
# Navigate again and force wait
remDr$navigate(url)
# Explicit wait for the table element (15 seconds max)
webElem <- tryCatch({
remDr$findElement(using = "css selector", ".forecast-body-table")
}, error = function(e) NULL)
# Check if the table appears
if (is.null(webElem)) stop("AQI table still didn't load!")
# start the Selenium server
remDr <- remoteDriver(
remoteServerAddr = "localhost",
port = 4444L,
browserName = "chrome"  # even though it's Chromium, specify "chrome"
)
# Open a connection
remDr$open()
remDr <- remoteDriver(
remoteServerAddr = "172.18.0.2",
port = 4444L,
browserName = "chrome"  # even though it's Chromium, specify "chrome"
)
# Open a connection
remDr$open()
remDr <- remoteDriver(
remoteServerAddr = "172.18.0.2",
port = 4444L,
browserName = "chrome"  # even though it's Chromium, specify "chrome"
)
# Open a connection
remDr$open()
url <- "https://aqicn.org/city/kathmandu/"
# Navigate to a AQI Website
remDr$navigate(url)
# Explicit wait for the table element (15 seconds max)
webElem <- tryCatch({
remDr$findElement(using = "css selector", ".forecast-body-table")
}, error = function(e) NULL)
# Check if the table appears
if (is.null(webElem)) stop("AQI table still didn't load!")
# Define the browser capabilities properly
browser_capabilities <- list(
browserName = "chrome",
platformName = "linux",
"goog:chromeOptions" = list(
args = list("--disable-gpu", "--no-sandbox", "--disable-dev-shm-usage")
)
)
# Connect to Selenium running in Docker
remDr <- remoteDriver(
remoteServerAddr = "localhost",
port = 4444L,
browserName = "chrome",
extraCapabilities = browser_capabilities
)
# Open connection
remDr$open()
# Test by navigating to a site
remDr$navigate("https://www.google.com")
Sys.sleep(3)  # Let page load
print(remDr$getTitle())
# Define the browser capabilities properly
browser_capabilities <- list(
browserName = "chrome",
platformName = "linux",
"goog:chromeOptions" = list(
args = list("--disable-gpu", "--no-sandbox", "--disable-dev-shm-usage")
)
)
# Connect to Selenium running in Docker
remDr <- remoteDriver(
remoteServerAddr = "172.18.0.2",
port = 4444L,
browserName = "chrome",
extraCapabilities = browser_capabilities
)
# Open connection
remDr$open()
# Test by navigating to a site
remDr$navigate("https://www.google.com")
Sys.sleep(3)  # Let page load
print(remDr$getTitle())
# Define the browser capabilities properly
browser_capabilities <- list(
browserName = "chrome",
platformName = "linux",
"goog:chromeOptions" = list(
args = list("--disable-gpu", "--no-sandbox", "--disable-dev-shm-usage")
)
)
# Connect to Selenium running in Docker
remDr <- remoteDriver(
remoteServerAddr = "172.18.0.2",
port = 4444L,
browserName = "chrome",
extraCapabilities = browser_capabilities
)
# Open connection
remDr$open()
remDr$navigate("https://www.google.com")
Sys.sleep(3)  # Let page load
print(remDr$getTitle())
library(RSelenium)
# Define capabilities for Docker Selenium
chrome_capabilities <- list(
browserName = "chrome",
"goog:chromeOptions" = list(
args = list("--disable-gpu", "--no-sandbox", "--disable-dev-shm-usage")
)
)
# Connect to Docker Selenium
remDr <- remoteDriver(
remoteServerAddr = "localhost",
port = 4444L,
browserName = "chrome",
extraCapabilities = chrome_capabilities
)
# Open the browser
remDr$open()
library(RSelenium)
# Define capabilities for Docker Selenium
chrome_capabilities <- list(
browserName = "chrome",
"goog:chromeOptions" = list(
args = list("--disable-gpu", "--no-sandbox", "--disable-dev-shm-usage")
)
)
# Connect to Docker Selenium
remDr <- remoteDriver(
remoteServerAddr = "http://172.18.0.2/",
port = 4444L,
browserName = "chrome",
extraCapabilities = chrome_capabilities
)
# Open the browser
remDr$open()
library(RSelenium)
# Define capabilities for Docker Selenium
chrome_capabilities <- list(
browserName = "chrome",
"goog:chromeOptions" = list(
args = list("--disable-gpu", "--no-sandbox", "--disable-dev-shm-usage")
)
)
# Connect to Docker Selenium
remDr <- remoteDriver(
remoteServerAddr = "172.18.0.2",
port = 4444L,
browserName = "chrome",
extraCapabilities = chrome_capabilities
)
# Open the browser
remDr$open()
# Navigate to Google and wait a bit for load
remDr$navigate("https://www.google.com")
Sys.sleep(3)
# Get the page title (this checks if the page loaded properly)
page_title <- remDr$getTitle()
print(page_title)
# Take a screenshot to verify visually (optional)
remDr$screenshot(display = TRUE)
library(RSelenium)
# Define capabilities for Docker Selenium
chrome_capabilities <- list(
browserName = "chrome",
"goog:chromeOptions" = list(
args = list("--disable-gpu", "--no-sandbox", "--disable-dev-shm-usage")
)
)
# Connect to Docker Selenium
remDr <- remoteDriver(
remoteServerAddr = "172.18.0.2",
port = 4444L,
browserName = "chrome",
extraCapabilities = chrome_capabilities
)
# Open the browser
remDr$open()
# Navigate to Google and wait a bit for load
remDr$navigate("https://www.google.com")
Sys.sleep(3)
# Get the page title (this checks if the page loaded properly)
page_title <- remDr$getTitle()
print(page_title)
library(RSelenium)
# Define Chrome capabilities
chrome_capabilities <- list(
browserName = "chrome",
"goog:chromeOptions" = list(
args = list("--headless", "--disable-gpu", "--no-sandbox", "--disable-dev-shm-usage")
)
)
# Connect to the running Docker container
remDr <- remoteDriver(
remoteServerAddr = "localhost",
port = 4444L,
browserName = "chrome",
extraCapabilities = chrome_capabilities
)
# Open browser
remDr$open()
library(RSelenium)
# Define Chrome capabilities
chrome_capabilities <- list(
browserName = "chrome",
"goog:chromeOptions" = list(
args = list("--headless", "--disable-gpu", "--no-sandbox", "--disable-dev-shm-usage")
)
)
# Connect to the running Docker container
remDr <- remoteDriver(
remoteServerAddr = "localhost",
port = 4444L,
browserName = "chrome",
extraCapabilities = chrome_capabilities
)
# Open browser
remDr$open()
# Navigate and interact
remDr$navigate("https://www.google.com")
Sys.sleep(3)
# Get title to ensure connection works
page_title <- remDr$getTitle()
print(page_title)
library(RSelenium)
# Define Chrome capabilities
chrome_capabilities <- list(
browserName = "chrome",
"goog:chromeOptions" = list(
args = list("--headless", "--disable-gpu", "--no-sandbox", "--disable-dev-shm-usage")
)
)
# Connect to the running Docker container
remDr <- remoteDriver(
remoteServerAddr = "localhost",
port = 4444L,
browserName = "chrome"
# extraCapabilities = chrome_capabilities
)
# Open browser
remDr$open()
# Navigate and interact
remDr$navigate("https://www.google.com")
Sys.sleep(3)
# Get title to ensure connection works
page_title <- remDr$getTitle()
print(page_title)
remDr <- remoteDriver(
remoteServerAddr = "localhost",  # or the Docker host IP
port = 4444L,
browserName = "chrome",
extraCapabilities = list(
chromeOptions = list(
args = list(
'--no-sandbox',            # Disable sandbox (required in some environments)
'--disable-dev-shm-usage'  # Disable /dev/shm usage
# '--headless'  # Make sure headless is not included
)
)
)
)
# Connect to the running Docker container
# remDr <- remoteDriver(
#   remoteServerAddr = "localhost",
#   port = 4444L,
#   browserName = "chrome"
#   extraCapabilities = chrome_capabilities
# )
# Open browser
remDr$open()
# Navigate and interact
remDr$navigate("https://www.google.com")
Sys.sleep(3)
# Get title to ensure connection works
page_title <- remDr$getTitle()
print(page_title)
library(RSelenium)
# Create a remote driver object
remDr <- remoteDriver(
remoteServerAddr = "localhost",
port = 4444L,
browserName = "firefox"  # Specify Firefox browser
)
library(RSelenium)
# Create a remote driver object
remDr <- remoteDriver(
remoteServerAddr = "localhost",
port = 4444L,
browserName = "firefox"  # Specify Firefox browser
)
# Open the browser
remDr$open()
# Navigate to a website
url <- "https://www.google.com"
remDr$navigate(url)
# Wait for the page to load
Sys.sleep(3)
# Get the title of the page
page_title <- remDr$getTitle()
print(page_title)
# Create a remote driver object with more defined capabilities
remDr <- remoteDriver(
remoteServerAddr = "localhost",   # Ensure this is correct (use container IP if necessary)
port = 4444L,
browserName = "firefox",          # Ensure 'firefox' is specified as the browser
extraCapabilities = list(
"moz:firefoxOptions" = list(
args = list("--headless")     # If you want headless mode, keep this, else remove it
)
)
)
# Open the browser
remDr$open()
# Navigate to a website
url <- "https://www.google.com"
remDr$navigate(url)
# Wait for the page to load
Sys.sleep(3)
# Get the title of the page
page_title <- remDr$getTitle()
print(page_title)
# Extract the page source (for further scraping)
page_source <- remDr$getPageSource()
print(page_source)
# Create a remote driver object with more defined capabilities
remDr <- remoteDriver(
remoteServerAddr = "172.18.0.2",   # Ensure this is correct (use container IP if necessary)
port = 4444L,
browserName = "firefox",          # Ensure 'firefox' is specified as the browser
extraCapabilities = list(
"moz:firefoxOptions" = list(
args = list("--headless")     # If you want headless mode, keep this, else remove it
)
)
)
# Open the browser
remDr$open()
# Navigate to a website
url <- "https://www.google.com"
remDr$navigate(url)
# Wait for the page to load
Sys.sleep(3)
# Get the title of the page
page_title <- remDr$getTitle()
print(page_title)
# Extract the page source (for further scraping)
page_source <- remDr$getPageSource()
print(page_source)
library(RSelenium)
library(RSelenium)
remDr <- remoteDriver(
remoteServerAddr = "localhost",
port = 4444L,
browserName = "chrome"  # Selenium will automatically choose Chromium if it's available
)
remDr$open()
if (is.na(remDr$sessionInfo$id)) {
stop("Failed to create a session. Check Selenium server logs.")
}
suppressWarnings({
library(RSelenium)
library(rvest)
library(jsonlite)
})
remDr <- remoteDriver(
remoteServerAddr = "localhost",
port = 4445L,
browserName = "chrome",
extraCapabilities = list(
chromeOptions = list(
args = list(
'--no-sandbox',            # Disable sandbox (required in some environments)
'--disable-dev-shm-usage'  # Disable /dev/shm usage
# '--headless'  # Make sure headless is not included
)
)
)
)
# Open a connection
remDr$open()
url <- "https://aqicn.org/city/kathmandu/"
# Navigate to a AQI Website
remDr$navigate(url)
webElem <- tryCatch({
remDr$findElement(using = "css selector", ".forecast-body-table")
},
# Explicit wait for the table element (15 seconds max)
webElem <- tryCatch({
remDr$findElement(using = "css selector", ".forecast-body-table")
}, error = function(e) NULL)
# Check if the table appears
if (is.null(webElem)) stop("AQI table still didn't load!")
page_source <- remDr$getPageSource()[[1]]
page_source <- remDr$getPageSource()
aqi_html <- read_html(page_source)
aqi_html <- read_html(remDr$getPageSource() %>% unlist())
install.packages('selenider')
library(selenider)
browser <- selenider_session(remote = "http://localhost:4445/wd/hub")
browser <- selenider_session(
browser = "chrome"  # You can also try "firefox" if preferred
)
chromedriver --version
browser <- selenider_session(
browser = "chrome"  # You can also try "firefox" if preferred
)
library(selenider)
browser <- selenider_session(
browser = "chrome"  # You can also try "firefox" if preferred
)
chromium_path <- "/snap/bin/chromium"  # Adjust this if your path differs
browser <- selenider_session(
browser = "chrome",
browser_options = list(
binary = chromium_path
)
)
selenider::check_chromedriver()
install.packages("webdriver")
Sys.setenv(PATH = paste(Sys.getenv("PATH"), "/snap/bin", sep = ":"))
library(selenider)
browser <- selenider_session(
browser = "chrome"  # You can also try "firefox" if preferred
)
rlang::last_trace()
rlang::last_trace(drop = FALSE)
library(rvest)
library(dplyr)
library(tidyr)
url_aqi <- "https://aqicn.org/city/kathmandu/"
setwd("~/projects/tilak/mds1/R-programming")
aqi_page <- read_html(url_aqi)
aq_forecast <- aqi_page %>% html_nodes("table") %>% html_table(fill = TRUE)
aq_forecast_clean <- aq_forecast[[1]] %>%
rename(Date = 1, AQI = 2) %>%
filter(!is.na(Date)) %>%
mutate(AQI = as.numeric(gsub("[, ]", "", AQI)))
aq_forecast_clean
write.csv(aq_forecast_clean, "cleaned_aqi_data.csv", row.names = FALSE)
